// -----------------------------------------------------------------------------
// This file contains all application-wide Sass variables. (Globals)
// -----------------------------------------------------------------------------


//== Colors
//

//## White colors
$white-base:              rgba(255, 255, 255, 1) !default; // #fff
$off-white:               #f6f6f6 !default;
$white_25:                hsla(0, 0%, 100%, .25);
$white_30:                hsla(0, 0%, 100%, .3);
$white_20:                hsla(0, 0%, 100%, .2);
$white_50:                hsla(0, 0%, 100%, .5);
$white_60:                hsla(0, 0%, 100%, .6);
$white_70:                hsla(0, 0%, 100%, .7);

//## Black colors
$black-base:              rgba(0, 0, 0, 1) !default; // #000
$black_70:                rgba(0, 0, 0, .7);
$black_60:                rgba(0, 0, 0, .6);
$black_30:                rgba(0, 0, 0, .3);
$black_20:                rgba(0, 0, 0, .2);

//## Gray colors
$gray-darker:             lighten($black-base, 13.5%) !default; // #222
$gray-dark:               lighten($black-base, 20%) !default;   // #333
$gray:                    lighten($black-base, 33.5%) !default; // #555
$gray-light:              lighten($black-base, 46.7%) !default; // #777
$gray-lighter:            lighten($black-base, 93.5%) !default; // #eee

//## Brand colors
$brand-color:             #6281af !default;//#526599 !default;
$brand-color-darker:      darken($brand-color, 20%) !default; 
$brand-color-dark:        darken($brand-color, 13.5%) !default; 
$brand-color-mid:         lighten($brand-color, 13.5%) !default; 
$brand-color-light:       lighten($brand-color, 36.7%) !default; 
$brand-color-lighter:     lighten($brand-color, 46.7%) !default; 

//## brand colors for use across Bootstrap.
$brand-primary:           $brand-color !default; 
$brand-success:           #5cb85c !default;
$brand-info:              #5bc0de !default;
$brand-warning:           #f0ad4e !default;
$brand-danger:            #d9534f !default;


//== Scaffolding
//
//## Settings for some of the most global styles.

//** Global text color on `<body>`.
$text-color:              $gray-dark !default;
//** Global textual link color.
$link-color:              $brand-primary !default;
//** Link hover color set via `darken()` function.
$link-hover-color:        lighten($link-color, 15%) !default;
//** Link hover decoration.
$link-hover-decoration:   underline !default;


//== Typography
//
//## Font, Font Size
$font-primary: 'Barlow', 'Helvetica', 'Arial', sans-serif !default;
$font-secondary: 'medio', 'Courier New', 'Bitstream Vera Sans Mono', 'Monaco', monospace !default;

// Did not need this but good trick to know
// $font-size-base:          14px !default;
// $font-size-large:         ceil(($font-size-base * 1.25)) !default; // ~18px
// $font-size-small:         ceil(($font-size-base * 0.85)) !default; // ~12px

// $font-size-h1:            floor(($font-size-base * 2.6)) !default; // ~36px
// $font-size-h2:            floor(($font-size-base * 2.15)) !default; // ~30px
// $font-size-h3:            ceil(($font-size-base * 1.7)) !default; // ~24px
// $font-size-h4:            ceil(($font-size-base * 1.25)) !default; // ~18px
// $font-size-h5:            $font-size-base !default;
// $font-size-h6:            ceil(($font-size-base * 0.85)) !default; // ~12px



/// Container's maximum width
/// @type Length
$max-width: 1180px !default;


/// Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels
$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}
// Usage
// .site-header {
//   padding: 2rem;
//   font-size: 1.8rem;
//   @include mq('tablet-wide') {
//       padding-top: 4rem;
//       font-size: 2.4rem;
//   }
// }

/// Relative or absolute URL where all assets are served from
/// @type String
/// @example scss - When using a CDN
///   $base-url: 'http://Assets/';
$base-url: '/Assets/' !default;
